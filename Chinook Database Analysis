## This was an analysis project from my Chinook.db file in my reposityory

## Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").
SELECT customers.CustomerId
, CONCAT(customers.FirstName, " ", customers.LastName) AS FullName
, customers.Country
FROM customers
WHERE customers.Country != "USA";

## Show only the Customers from Brazil. 
SELECT CONCAT(customers.FirstName, " ", customers.LastName) AS FullName
, customers.Country
FROM customers
WHERE customers.Country == "Brazil";

## Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT CONCAT(customers.FirstName, " ", customers.LastName) AS FullName
, invoices.InvoiceId
, invoices.InvoiceDate
, invoices.BillingCountry
FROM customers
LEFT JOIN invoices
ON customers.CustomerId = invoices.CustomerId
WHERE invoices.BillingCountry = "Brazil"
;

## Show the Employees who are Sales Agents.
SELECT CONCAT(employees.FirstName, " ", employees.LastName) AS FullName
, employees.Title
FROM employees
WHERE employees.Title LIKE "Sales%"
AND employees.Title NOT LIKE "%Manager%"
;

## Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT invoices.BillingCountry
FROM invoices
ORDER BY invoices.BillingCountry ASC
;

## Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT CONCAT(employees.FirstName, " ", employees.LastName) AS FullName
, invoices.InvoiceId
FROM employees
JOIN customers
ON employees.EmployeeId = customers.SupportRepId
JOIN invoices
ON customers.CustomerId = invoices.CustomerId
;

## Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT CONCAT(customers.FirstName, " ", customers.LastName) AS CustomerName
, customers.Country
, invoices.Total
, CONCAT(customers.FirstName, " ", customers.LastName) AS SalesAgent
FROM employees
JOIN customers 
ON employees.EmployeeId = customers.SupportRepId
LEFT JOIN invoices
ON customers.CustomerId = invoices.CustomerId
;

## How many Invoices were there in 2009?
SELECT COUNT(invoices.InvoiceDate) AS Total2009Invoices
FROM invoices
WHERE invoices.InvoiceDate LIKE "2009%"
;

## What are the total sales for 2009?
SELECT SUM(invoices.Total)
FROM invoices
WHERE invoices.InvoiceDate LIKE "2009%"
;

## Write a query that includes the purchased track name with each invoice line ID.
SELECT invoice_items.InvoiceLineId
, tracks.Name AS Track
FROM invoice_items
LEFT JOIN tracks
ON invoice_items.TrackId = tracks.TrackID
ORDER BY invoice_items.InvoiceLineId ASC
;

## Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT invoice_items.InvoiceLineId
, tracks.Name AS Track
, artists.Name AS Artist
FROM invoice_items
LEFT JOIN tracks
ON invoice_items.TrackId = tracks.TrackID
LEFT JOIN artists
ON tracks.AlbumID = artists.ArtistId
ORDER BY invoice_items.InvoiceLineId ASC
;

## Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT tracks.Name AS Track
, albums.Title AS Album
, genres.Name AS Genre
, media_types.Name AS MediaType
FROM media_types
LEFT JOIN tracks
ON media_types.MediaTypeId = tracks.MediaTypeId
LEFT JOIN albums
ON tracks.AlbumId = albums.AlbumId
LEFT JOIN genres
ON tracks.GenreId = genres.GenreId
ORDER BY Album ASC
;

## Show the total sales made by each sales agent.
SELECT CONCAT(employees.FirstName, " ", employees.LastName) AS FullName
, SUM(invoices.Total)
FROM employees
LEFT JOIN customers 
ON employees.EmployeeId = customers.SupportRepId
LEFT JOIN invoices
ON customers.CustomerId = invoices.CustomerId
WHERE employees.Title = "Sales Support Agent"
GROUP BY FullName
ORDER BY employees.EmployeeId ASC
;

## Which sales agent made the most dollars in sales in 2009?
SELECT CONCAT(employees.FirstName, " ", employees.LastName) AS FullName
, SUM(invoices.Total) AS Total
FROM employees
LEFT JOIN customers 
ON employees.EmployeeId = customers.SupportRepId
LEFT JOIN invoices
ON customers.CustomerId = invoices.CustomerId
WHERE employees.Title = "Sales Support Agent"
AND invoices.InvoiceDate LIKE "2009%"
GROUP BY FullName
ORDER BY Total ASC
LIMIT 1
;

## Which employee has the highest invoice total in the company? 
SELECT CONCAT(employees.FirstName, " ", employees.LastName) AS FullName
, SUM(invoices.Total) AS Total
FROM employees
LEFT JOIN customers 
ON employees.EmployeeId = customers.SupportRepId
LEFT JOIN invoices
ON customers.CustomerId = invoices.CustomerId
WHERE employees.Title = "Sales Support Agent"
GROUP BY FullName
ORDER BY Total DESC
LIMIT 1
;

## Which media type does each employee sell the most?
WITH employee_media AS (
    SElECT CONCAT(employees.FirstName, " ", employees.LastName) AS FullName
    , media_types.Name AS MediaType
    FROM employees
    LEFT JOIN customers 
    ON employees.EmployeeId = customers.SupportRepId
    LEFT JOIN invoices
    ON customers.CustomerId = invoices.CustomerId
    LEFT JOIN invoice_items
    ON invoices.InvoiceId = invoice_items.InvoiceId
    LEFT JOIN tracks
    ON invoice_items.TrackId = tracks.TrackId
    LEFT JOIN media_types
    ON tracks.MediaTypeId = media_types.MediaTypeId
    WHERE employees.Title = "Sales Support Agent"
),
media_counts AS (
SELECT FullName
, MediaType
, COUNT(*) AS MediaCount
FROM employee_media
GROUP BY FullName, MediaType
),
ranked_media AS (
SELECT FullName
, MediaType
, MediaCount
      , RANK() OVER (
            PARTITION BY FullName
            ORDER BY MediaCount DESC
        ) AS MediaRank
    FROM media_counts
)
SELECT FullName
, MediaType AS TopMediaType
, MediaCount
FROM ranked_media
WHERE MediaRank = 1
;

## How many songs does each genre have?
SELECT genres.Name AS Genre
, COUNT(tracks.TrackId) SongTotal
FROM genres
LEFT JOIN tracks
ON genres.GenreId = tracks.GenreId
GROUP BY Genre
ORDER BY SongTotal DESC
;
